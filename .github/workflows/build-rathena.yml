name: Build & Deploy rAthena Server

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build rAthena (CMake)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          # Evita conflito entre MariaDB e MySQL
          sudo apt-get remove -y libmariadb-dev libmariadb3 || true
          sudo apt-get install -y build-essential cmake gcc g++ make zlib1g-dev
          sudo apt-get install -y libmysqlclient-dev

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build rAthena
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Upload compiled binaries
        uses: actions/upload-artifact@v4
        with:
          name: rathena-binaries
          path: |
            build/login-server
            build/char-server
            build/map-server

  deploy:
    name: Deploy to DigitalOcean
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment:
      name: production

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: rathena-binaries
          path: ./build

      - name: Upload binaries to DigitalOcean
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          password: ${{ secrets.DO_PASSWORD }}
          source: "build/*"
          target: "~/rathena/build"

      - name: Restart rAthena server remotely
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          password: ${{ secrets.DO_PASSWORD }}
          script: |
            cd ~/rathena
            chmod +x start-server.sh
            ./start-server.sh restart
